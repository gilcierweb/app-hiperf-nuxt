services:
  app:
    container_name: apihiperf
    build:
      context: ./api-hiperf
      dockerfile: Dockerfile.hiperf  
    tty: true
    restart: always   
    environment:
      - FRONTEND_URL=http://app-nuxt:3000
      - APP_ENV=production
      - DB_HOST=mysql
      - DB_PORT=3306
      - DB_DATABASE=hyperf
      - DB_USERNAME=hyperf
      - DB_PASSWORD=secret
    depends_on:
      - database
      # - app-nuxt
      #- redis
    ports: 
      - '9501:9501'
    volumes:
      - .:/app  
    env_file: api-hiperf/.env
    networks:
      - app-network

  database:
    image: mysql:latest
    container_name: database
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: hyperf
      MYSQL_USER: hyperf
      MYSQL_PASSWORD: secret
      TZ: America/Sao_Paulo
    ports:
      - "3307:3306"
    volumes:
      - mysql-data:/var/lib/mysql
    networks:
      - app-network
    
  app-nuxt:
    container_name: app-nuxt
    build:
      context: ./app-nuxt
      dockerfile: Dockerfile.nuxt
    tty: true
    restart: always
    environment:
      NUXT_PUBLIC_API_RUST_BASE_URL: http://app:8080
    ports: 
      - '3000:3000'
    # volumes:
      # - .:/app
      # - ./node_modules:/app/node_modules
    networks:
      - app-network
    depends_on:
      - app
    
    # entrypoint: bash -c "ls -laH && find . -name 'index.mjs' "

#  redis:
#    image: redis:7.2.4-alpine
#    ports:
#      - '6379:6379'

volumes:
  mysql-data:

networks:
  app-network:
    driver: bridge
